{"ast":null,"code":"import PostForm from \"@/components/PostForm.vue\";\nimport PostList from \"@/components/PostList.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    PostForm,\n    PostList\n  },\n\n  data() {},\n\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n\n    showDialog() {\n      this.dialogVisible = true;\n    }\n\n  },\n\n  mounted() {// this.fetchPosts();\n  }\n\n};","map":{"version":3,"mappings":"AAoDA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACfC,UAAU,EAAE;IACVH,QADU;IAEVC;EAFU,CADG;;EAMfG,IAAI,GAAG,CAEN,CARc;;EAUfC,OAAO,EAAE;IACPC,UAAU,CAACC,IAAD,EAAO;MACjB,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;MACA,KAAKG,aAAL,GAAqB,KAArB;IACC,CAJM;;IAKPC,UAAU,CAACJ,IAAD,EAAO;MACjB,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWI,MAAX,CAAkBC,KAAKA,CAAC,CAACC,EAAF,KAASP,IAAI,CAACO,EAArC,CAAb;IACC,CAPM;;IAQPC,UAAU,GAAG;MACb,KAAKL,aAAL,GAAqB,IAArB;IACC;;EAVM,CAVM;;EAsBfM,OAAO,GAAG,CACR;EACD;;AAxBc,CAAf","names":["PostForm","PostList","axios","components","data","methods","createPost","post","posts","push","dialogVisible","removePost","filter","p","id","showDialog","mounted"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\project1\\src\\pages\\PostPageWithStore.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <h1> {{store.state.post.limit}}</h1>\r\n      <h1>{{ $store.state.isAuth ? \"The user is logged in\" : \"Log in to use the service\"}}</h1>\r\n      <h1> {{ $store.state.likes }} </h1>\r\n      <div>\r\n        <my-button @click=\"$store.commit('decrementLikes')\">Dislike</my-button>\r\n        <my-button @click=\"$store.commit('incrementLikes')\">Like</my-button>\r\n      </div>\r\n      <!-- <h3>Page with posts</h3>\r\n      <my-input\r\n      v-model=\"searchQuery\"\r\n      placeholder=\"search...\"\r\n      v-focus\r\n      />\r\n      <div class=\"app__btns\">\r\n\r\n      <my-button\r\n      @click=\"showDialog\"\r\n      >\r\n      Сreate a post\r\n      </my-button>\r\n      \r\n      <my-select\r\n          v-model=\"selectedSort\"\r\n          :options=\"sortOptions\"\r\n      />\r\n      </div>\r\n      \r\n      <my-dialog v-model:show=\"dialogVisible\">\r\n      <post-form\r\n      @create=\"createPost\"\r\n      />\r\n      </my-dialog>\r\n\r\n      <post-list\r\n      :posts=\"sortAndSearchedPosts\"\r\n      @remove=\"removePost\"\r\n      v-if=\"!isPostsLoading\"\r\n      />\r\n\r\n      <div v-else >\r\n      Downloading...\r\n      </div>\r\n\r\n      <div v-intersection=\"loadMorePosts\" class=\"observer\"></div> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>  \r\nimport PostForm from \"@/components/PostForm.vue\";\r\nimport PostList from \"@/components/PostList.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\ncomponents: {\r\n  PostForm,\r\n  PostList,\r\n},\r\n\r\ndata() {\r\n\r\n},\r\n\r\nmethods: {\r\n  createPost(post) {\r\n  this.posts.push(post);\r\n  this.dialogVisible = false;\r\n  },\r\n  removePost(post) {\r\n  this.posts = this.posts.filter(p => p.id !== post.id)\r\n  },\r\n  showDialog() {\r\n  this.dialogVisible = true;\r\n  },\r\n},\r\nmounted() {\r\n  // this.fetchPosts();\r\n},\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.app__btns {\r\nmargin: 15px 0;\r\ndisplay: flex;\r\njustify-content: space-between; /* кнопка напротив выпадающего списка */\r\n}\r\n.observer {\r\nheight: 30px;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}