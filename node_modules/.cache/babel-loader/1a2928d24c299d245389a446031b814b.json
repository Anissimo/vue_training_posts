{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Dislike\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Like\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.store.state.post.limit), 1\n  /* TEXT */\n  ), _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$store.state.isAuth ? \"The user is logged in\" : \"Log in to use the service\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$store.state.likes), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", null, [_createVNode(_component_my_button, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$store.commit('decrementLikes'))\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_my_button, {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$store.commit('incrementLikes'))\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  })]), _createCommentVNode(\" <h3>Page with posts</h3>\\r\\n      <my-input\\r\\n      v-model=\\\"searchQuery\\\"\\r\\n      placeholder=\\\"search...\\\"\\r\\n      v-focus\\r\\n      />\\r\\n      <div class=\\\"app__btns\\\">\\r\\n\\r\\n      <my-button\\r\\n      @click=\\\"showDialog\\\"\\r\\n      >\\r\\n      Сreate a post\\r\\n      </my-button>\\r\\n      \\r\\n      <my-select\\r\\n          v-model=\\\"selectedSort\\\"\\r\\n          :options=\\\"sortOptions\\\"\\r\\n      />\\r\\n      </div>\\r\\n      \\r\\n      <my-dialog v-model:show=\\\"dialogVisible\\\">\\r\\n      <post-form\\r\\n      @create=\\\"createPost\\\"\\r\\n      />\\r\\n      </my-dialog>\\r\\n\\r\\n      <post-list\\r\\n      :posts=\\\"sortAndSearchedPosts\\\"\\r\\n      @remove=\\\"removePost\\\"\\r\\n      v-if=\\\"!isPostsLoading\\\"\\r\\n      />\\r\\n\\r\\n      <div v-else >\\r\\n      Downloading...\\r\\n      </div>\\r\\n\\r\\n      <div v-intersection=\\\"loadMorePosts\\\" class=\\\"observer\\\"></div> \")]);\n}","map":{"version":3,"mappings":";;iDAM4D;;iDACA;;;;;uBAN1DA,oBA8CM,KA9CN,EA8CM,IA9CN,EA8CM,CA7CFC,oBAAoC,IAApC,EAAoC,IAApC,EAAoCC,iBAA7BC,WAAMC,KAAN,CAAYC,IAAZ,CAAiBC,KAAY,CAApC,EAA6B;EAAA;EAA7B,CA6CE,EA5CFL,oBAAyF,IAAzF,EAAyF,IAAzF,EAAyFC,iBAAlFC,YAAOC,KAAP,CAAaG,MAAb,GAAmB,uBAAnB,GAAmB,2BAA+D,CAAzF,EAA0B;EAAA;EAA1B,CA4CE,EA3CFN,oBAAmC,IAAnC,EAAmC,IAAnC,EAAmCC,iBAA3BC,YAAOC,KAAP,CAAaI,KAAc,CAAnC,EAA0B;EAAA;EAA1B,CA2CE,EA1CFP,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFJQ,aAAuEC,oBAAvE,EAAuE;IAA3DC,OAAK,sCAAER,YAAOS,MAAP,CAAa,gBAAb,CAAF;EAAsD,CAAvE;sBAAoD,MAAO;;;;GAA3D,CAEI,EADJH,aAAoEC,oBAApE,EAAoE;IAAxDC,OAAK,sCAAER,YAAOS,MAAP,CAAa,gBAAb,CAAF;EAAmD,CAApE;sBAAoD,MAAI;;;;GAAxD,CACI,CAHN,CA0CE,EAtCFC,g3BAsCE,CA9CN","names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","state","post","limit","isAuth","likes","_createVNode","_component_my_button","onClick","commit","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\project1\\src\\pages\\PostPageWithStore.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <h1> {{store.state.post.limit}}</h1>\r\n      <h1>{{ $store.state.isAuth ? \"The user is logged in\" : \"Log in to use the service\"}}</h1>\r\n      <h1> {{ $store.state.likes }} </h1>\r\n      <div>\r\n        <my-button @click=\"$store.commit('decrementLikes')\">Dislike</my-button>\r\n        <my-button @click=\"$store.commit('incrementLikes')\">Like</my-button>\r\n      </div>\r\n      <!-- <h3>Page with posts</h3>\r\n      <my-input\r\n      v-model=\"searchQuery\"\r\n      placeholder=\"search...\"\r\n      v-focus\r\n      />\r\n      <div class=\"app__btns\">\r\n\r\n      <my-button\r\n      @click=\"showDialog\"\r\n      >\r\n      Сreate a post\r\n      </my-button>\r\n      \r\n      <my-select\r\n          v-model=\"selectedSort\"\r\n          :options=\"sortOptions\"\r\n      />\r\n      </div>\r\n      \r\n      <my-dialog v-model:show=\"dialogVisible\">\r\n      <post-form\r\n      @create=\"createPost\"\r\n      />\r\n      </my-dialog>\r\n\r\n      <post-list\r\n      :posts=\"sortAndSearchedPosts\"\r\n      @remove=\"removePost\"\r\n      v-if=\"!isPostsLoading\"\r\n      />\r\n\r\n      <div v-else >\r\n      Downloading...\r\n      </div>\r\n\r\n      <div v-intersection=\"loadMorePosts\" class=\"observer\"></div> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>  \r\nimport PostForm from \"@/components/PostForm.vue\";\r\nimport PostList from \"@/components/PostList.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\ncomponents: {\r\n  PostForm,\r\n  PostList,\r\n},\r\n\r\ndata() {\r\n\r\n},\r\n\r\nmethods: {\r\n  createPost(post) {\r\n  this.posts.push(post);\r\n  this.dialogVisible = false;\r\n  },\r\n  removePost(post) {\r\n  this.posts = this.posts.filter(p => p.id !== post.id)\r\n  },\r\n  showDialog() {\r\n  this.dialogVisible = true;\r\n  },\r\n},\r\nmounted() {\r\n  // this.fetchPosts();\r\n},\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.app__btns {\r\nmargin: 15px 0;\r\ndisplay: flex;\r\njustify-content: space-between; /* кнопка напротив выпадающего списка */\r\n}\r\n.observer {\r\nheight: 30px;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}