{"ast":null,"code":"import PostForm from \"@/components/PostForm.vue\";\nimport PostList from \"@/components/PostList.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    PostForm,\n    PostList\n  },\n\n  data() {},\n\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n\n    showDialog() {\n      this.dialogVisible = true;\n    },\n\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Error');\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Error');\n      }\n    }\n\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => {\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]);\n      });\n    },\n\n    sortAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n\n  },\n\n  mounted() {\n    this.fetchPosts();\n  }\n\n};","map":{"version":3,"mappings":"AAmDA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACfC,UAAU,EAAE;IACVH,QADU;IAEVC;EAFU,CADG;;EAMfG,IAAI,GAAG,CAEN,CARc;;EAUfC,OAAO,EAAE;IACPC,UAAU,CAACC,IAAD,EAAO;MACjB,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;MACA,KAAKG,aAAL,GAAqB,KAArB;IACC,CAJM;;IAKPC,UAAU,CAACJ,IAAD,EAAO;MACjB,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWI,MAAX,CAAkBC,KAAKA,CAAC,CAACC,EAAF,KAASP,IAAI,CAACO,EAArC,CAAb;IACC,CAPM;;IAQPC,UAAU,GAAG;MACb,KAAKL,aAAL,GAAqB,IAArB;IACC,CAVM;;IAWP,MAAMM,UAAN,GAAmB;MACnB,IAAI;QACA,KAAKC,cAAL,GAAsB,IAAtB;QACA,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAN,CAAU,4CAAV,EAAwD;UAC/EC,MAAM,EAAE;YACJC,KAAK,EAAE,KAAKC,IADR;YAEJC,MAAM,EAAE,KAAKC;UAFT;QADuE,CAAxD,CAAvB;QAMA,KAAKC,UAAL,GAAkBC,IAAI,CAACC,IAAL,CAAUT,QAAQ,CAACU,OAAT,CAAiB,eAAjB,IAAoC,KAAKJ,KAAnD,CAAlB;QACA,KAAKhB,KAAL,GAAaU,QAAQ,CAACd,IAAtB;MACJ,CAVA,CAUE,OAAOyB,CAAP,EAAU;QACRC,KAAK,CAAC,OAAD,CAAL;MACJ,CAZA,SAYU;QACN,KAAKb,cAAL,GAAsB,KAAtB;MACJ;IACC,CA3BM;;IA4BP,MAAMc,aAAN,GAAsB;MACtB,IAAI;QACA,KAAKT,IAAL,IAAa,CAAb;QACA,MAAMJ,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAN,CAAU,4CAAV,EAAwD;UAC/EC,MAAM,EAAE;YACJC,KAAK,EAAE,KAAKC,IADR;YAEJC,MAAM,EAAE,KAAKC;UAFT;QADuE,CAAxD,CAAvB;QAMA,KAAKC,UAAL,GAAkBC,IAAI,CAACC,IAAL,CAAUT,QAAQ,CAACU,OAAT,CAAiB,eAAjB,IAAoC,KAAKJ,KAAnD,CAAlB;QACA,KAAKhB,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAgB,GAAGU,QAAQ,CAACd,IAA5B,CAAb;MACJ,CAVA,CAUE,OAAOyB,CAAP,EAAU;QACRC,KAAK,CAAC,OAAD,CAAL;MACJ;IACC;;EA1CM,CAVM;EAsDfE,QAAQ,EAAE;IACRC,WAAW,GAAG;MACd,OAAO,CAAC,GAAG,KAAKzB,KAAT,EAAgB0B,IAAhB,CAAqB,CAACC,KAAD,EAAOC,KAAP,KAAiB;QACzC,OAAOD,KAAK,CAAC,KAAKE,YAAN,CAAL,EAA0BC,aAA1B,CAAwCF,KAAK,CAAC,KAAKC,YAAN,CAA7C,CAAP;MACH,CAFM,CAAP;IAGC,CALO;;IAMRE,oBAAoB,GAAG;MACvB,OAAO,KAAKN,WAAL,CAAiBrB,MAAjB,CAAwBL,IAAG,IAAKA,IAAI,CAACiC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKC,WAAL,CAAiBF,WAAjB,EAAlC,CAAhC,CAAP;IACA;;EARQ,CAtDK;;EAgEfG,OAAO,GAAG;IACV,KAAK5B,UAAL;EACC;;AAlEc,CAAf","names":["PostForm","PostList","axios","components","data","methods","createPost","post","posts","push","dialogVisible","removePost","filter","p","id","showDialog","fetchPosts","isPostsLoading","response","get","params","_page","page","_limit","limit","totalPages","Math","ceil","headers","e","alert","loadMorePosts","computed","sortedPosts","sort","post1","post2","selectedSort","localeCompare","sortAndSearchedPosts","title","toLowerCase","includes","searchQuery","mounted"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\project1\\src\\pages\\PostPageWithStore.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <h1>{{ $store.state.isAuth ? \"The user is logged in\" : \"Log in to use the service\"}}</h1>\r\n      <h1> {{ $store.state.likes }} </h1>\r\n      <div>\r\n        <my-button @click=\"$store.commit('decrementLikes')\">Dislike</my-button>\r\n        <my-button @click=\"$store.commit('incrementLikes')\">Like</my-button>\r\n      </div>\r\n      <h3>Page with posts</h3>\r\n      <my-input\r\n      v-model=\"searchQuery\"\r\n      placeholder=\"search...\"\r\n      v-focus\r\n      />\r\n      <div class=\"app__btns\">\r\n\r\n      <my-button\r\n      @click=\"showDialog\"\r\n      >\r\n      Сreate a post\r\n      </my-button>\r\n      \r\n      <my-select\r\n          v-model=\"selectedSort\"\r\n          :options=\"sortOptions\"\r\n      />\r\n      </div>\r\n      \r\n      <my-dialog v-model:show=\"dialogVisible\">\r\n      <post-form\r\n      @create=\"createPost\"\r\n      />\r\n      </my-dialog>\r\n\r\n      <post-list\r\n      :posts=\"sortAndSearchedPosts\"\r\n      @remove=\"removePost\"\r\n      v-if=\"!isPostsLoading\"\r\n      />\r\n\r\n      <div v-else >\r\n      Downloading...\r\n      </div>\r\n\r\n      <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>  \r\nimport PostForm from \"@/components/PostForm.vue\";\r\nimport PostList from \"@/components/PostList.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\ncomponents: {\r\n  PostForm,\r\n  PostList,\r\n},\r\n\r\ndata() {\r\n\r\n},\r\n\r\nmethods: {\r\n  createPost(post) {\r\n  this.posts.push(post);\r\n  this.dialogVisible = false;\r\n  },\r\n  removePost(post) {\r\n  this.posts = this.posts.filter(p => p.id !== post.id)\r\n  },\r\n  showDialog() {\r\n  this.dialogVisible = true;\r\n  },\r\n  async fetchPosts() {\r\n  try {\r\n      this.isPostsLoading = true;\r\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      params: {\r\n          _page: this.page,\r\n          _limit: this.limit,\r\n      }\r\n      })\r\n      this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n      this.posts = response.data;\r\n  } catch (e) {\r\n      alert('Error')\r\n  } finally {\r\n      this.isPostsLoading = false;\r\n  }\r\n  },\r\n  async loadMorePosts() {\r\n  try {\r\n      this.page += 1;\r\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      params: {\r\n          _page: this.page,\r\n          _limit: this.limit,\r\n      }\r\n      })\r\n      this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n      this.posts = [...this.posts, ...response.data]\r\n  } catch (e) {\r\n      alert('Error')\r\n  } \r\n  },\r\n},\r\ncomputed: {\r\n  sortedPosts() {\r\n  return [...this.posts].sort((post1,post2) => {\r\n      return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\r\n  })\r\n  },\r\n  sortAndSearchedPosts() {\r\n  return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n  }\r\n},\r\nmounted() {\r\nthis.fetchPosts();\r\n},\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.app__btns {\r\nmargin: 15px 0;\r\ndisplay: flex;\r\njustify-content: space-between; /* кнопка напротив выпадающего списка */\r\n}\r\n.observer {\r\nheight: 30px;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}