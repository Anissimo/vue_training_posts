{"ast":null,"code":"import PostForm from \"@/components/PostForm.vue\";\nimport PostList from \"@/components/PostList.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    PostForm,\n    PostList\n  },\n\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPage: 0,\n      sortOptions: [{\n        value: 'title',\n        name: 'By title'\n      }, {\n        value: 'body',\n        name: 'By body'\n      }]\n    };\n  },\n\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n\n    showDialog() {\n      this.dialogVisible = true;\n    },\n\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Error');\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Error');\n      }\n    }\n\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => {\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]);\n      });\n    },\n\n    sortAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n\n  },\n\n  mounted() {\n    this.fetchPosts();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["PostForm","PostList","axios","components","data","posts","dialogVisible","isPostsLoading","selectedSort","searchQuery","page","limit","totalPage","sortOptions","value","name","methods","createPost","post","push","removePost","filter","p","id","showDialog","fetchPosts","response","get","params","_page","_limit","totalPages","Math","ceil","headers","e","alert","loadMorePosts","computed","sortedPosts","sort","post1","post2","localeCompare","sortAndSearchedPosts","title","toLowerCase","includes","mounted"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\5_vue1_training_posts\\src\\pages\\PostPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <h3>Page with posts</h3>\r\n        <my-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"search...\"\r\n        v-focus\r\n        />\r\n        <div class=\"app__btns\">\r\n\r\n        <my-button\r\n        @click=\"showDialog\"\r\n        >\r\n        Сreate a post\r\n        </my-button>\r\n        \r\n        <my-select\r\n            v-model=\"selectedSort\"\r\n            :options=\"sortOptions\"\r\n        />\r\n        </div>\r\n        \r\n        <my-dialog v-model:show=\"dialogVisible\">\r\n        <post-form\r\n        @create=\"createPost\"\r\n        />\r\n        </my-dialog>\r\n\r\n        <post-list\r\n        :posts=\"sortAndSearchedPosts\"\r\n        @remove=\"removePost\"\r\n        v-if=\"!isPostsLoading\"\r\n        />\r\n\r\n        <div v-else >\r\n        Downloading...\r\n        </div>\r\n\r\n        <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>  \r\nimport PostForm from \"@/components/PostForm.vue\";\r\nimport PostList from \"@/components/PostList.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\ncomponents: {\r\n    PostForm,\r\n    PostList,\r\n},\r\n\r\ndata() {\r\n    return{\r\n    posts: [],\r\n    dialogVisible: false,\r\n    isPostsLoading: false,\r\n    selectedSort: '',\r\n    searchQuery: '',\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n    sortOptions: [\r\n        {value: 'title', name: 'By title'},\r\n        {value: 'body', name: 'By body'},\r\n    ]\r\n    }\r\n},\r\n\r\nmethods: {\r\n    createPost(post) {\r\n    this.posts.push(post);\r\n    this.dialogVisible = false;\r\n    },\r\n    removePost(post) {\r\n    this.posts = this.posts.filter(p => p.id !== post.id)\r\n    },\r\n    showDialog() {\r\n    this.dialogVisible = true;\r\n    },\r\n    async fetchPosts() {\r\n    try {\r\n        this.isPostsLoading = true;\r\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\r\n        params: {\r\n            _page: this.page,\r\n            _limit: this.limit,\r\n        }\r\n        })\r\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n        this.posts = response.data;\r\n    } catch (e) {\r\n        alert('Error')\r\n    } finally {\r\n        this.isPostsLoading = false;\r\n    }\r\n    },\r\n    async loadMorePosts() {\r\n    try {\r\n        this.page += 1;\r\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\r\n        params: {\r\n            _page: this.page,\r\n            _limit: this.limit,\r\n        }\r\n        })\r\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n        this.posts = [...this.posts, ...response.data]\r\n    } catch (e) {\r\n        alert('Error')\r\n    } \r\n    },\r\n},\r\ncomputed: {\r\n    sortedPosts() {\r\n    return [...this.posts].sort((post1,post2) => {\r\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\r\n    })\r\n    },\r\n    sortAndSearchedPosts() {\r\n    return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\r\n    }\r\n},\r\nmounted() {\r\nthis.fetchPosts();\r\n},\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.app__btns {\r\nmargin: 15px 0;\r\ndisplay: flex;\r\njustify-content: space-between; /* кнопка напротив выпадающего списка */\r\n}\r\n.observer {\r\nheight: 30px;\r\n}\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module"}