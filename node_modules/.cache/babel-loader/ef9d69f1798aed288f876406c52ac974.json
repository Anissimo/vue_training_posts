{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Page with posts\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"app__btns\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Сreate a user \");\n\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n\n  const _component_my_button = _resolveComponent(\"my-button\");\n\n  const _component_my_select = _resolveComponent(\"my-select\");\n\n  const _component_post_form = _resolveComponent(\"post-form\");\n\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n\n  const _component_post_list = _resolveComponent(\"post-list\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_my_input, {\n    modelValue: _ctx.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchQuery = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_my_button, {\n    onClick: _ctx.showDialog\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: _ctx.selectedSort,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectedSort = $event),\n    options: _ctx.sortOptions\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: _ctx.dialogVisible,\n    \"onUpdate:show\": _cache[2] || (_cache[2] = $event => _ctx.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: _ctx.createPost\n    }, null, 8\n    /* PROPS */\n    , [\"onCreate\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"show\"]), !_ctx.isPostsLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: _ctx.selectedSort,\n    onRemove: _ctx.removePost\n  }, null, 8\n  /* PROPS */\n  , [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" Идёт загрузка... \"))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAG;;;gCAEXC,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB;AAAA;AAAnB;;;EAIKD,KAAK,EAAC;;;iDAIV;;;;;;;;;;;;;;;;;;uBAVHE,oBAoCM,KApCN,cAoCM,CAlCJC,UAkCI,EAjCJC,aAEEC,mBAFF,EAEE;gBADOC,gBACP;+DADOA,mBAAWC;EAClB,CAFF;;EAAA,iBAiCI,EA9BJN,oBAYM,KAZN,cAYM,CAVNG,aAIYI,oBAJZ,EAIY;IAHXC,OAAK,EAAEH;EAGI,CAJZ,EACkB;sBACjB,MAED,aAHkB;;;;EAAA,CADlB;;EAAA,cAUM,EAJJF,aAGEM,oBAHF,EAGE;gBAFSJ,iBAET;+DAFSA,oBAAYC,OAErB;IADCI,OAAO,EAAEL;EACV,CAHF;;EAAA,4BAII,CAZN,CA8BI,EAhBJF,aAIYQ,oBAJZ,EAIY;IAJOC,IAAI,EAAEP,kBAIb;yDAJaA,qBAAaC;EAI1B,CAJZ;sBACE,MAEE,CAFFH,aAEEU,oBAFF,EAEE;MADDC,QAAM,EAAET;IACP,CAFF,EACmB,IADnB,EACmB;IAAA;IADnB,EACmB,YADnB,CAEE;;;;GAHJ;;EAAA,WAgBI,GAPKA,qCAHTU,aAIEC,oBAJF,EAIE;UAAA;IAHCC,KAAK,EAAEZ,iBAGR;IAFCa,QAAM,EAAEb;EAET,CAJF;;EAAA,2CAMAJ,oBAEM,KAFN,EAEMkB,UAFN,EAAa,oBAAb,EAII,CApCN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_my_input","_ctx","$event","_component_my_button","onClick","_component_my_select","options","_component_my_dialog","show","_component_post_form","onCreate","_createBlock","_component_post_list","posts","onRemove","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\project1\\src\\App.vue"],"sourcesContent":["<template>\n  <div class = \"app\">\n\n    <h3>Page with posts</h3>\n    <my-input\n    v-model=\"searchQuery\"\n    />\n    <div class=\"app__btns\">\n\n    <my-button\n    @click=\"showDialog\"\n    >\n      Сreate a user\n    </my-button>\n    \n      <my-select\n        v-model=\"selectedSort\"\n        :options=\"sortOptions\"\n      />\n    </div>\n    \n    <my-dialog v-model:show=\"dialogVisible\">\n      <post-form\n      @create=\"createPost\"\n      />\n    </my-dialog>\n\n    <post-list\n      :posts=\"selectedSort\"\n      @remove=\"removePost\"\n      v-if=\"!isPostsLoading\"\n    />\n\n    <div v-else >\n      Идёт загрузка...\n    </div>\n\n  </div>\n</template>\n\n\n<script>  \nimport PostForm from \"@/components/PostForm.vue\";\nimport PostList from \"@/components/PostList.vue\";\nimport axios from \"axios\";\n \nexport default {\n  components: {\n    PostForm,\n    PostList,\n  },\n\n  data() {\n    return{\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      searchQuery: '',\n      sortOptions: [\n        {value: 'title', name: 'By title'},\n        {value: 'body', name: 'By body'},\n      ]\n    }\n  },\n\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id)\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts?_limit=10\") // получаем данные с сервера\n        this.posts = response.data;\n      } catch (e) {\n        alert('Error')\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n  },\n  mounted() {\n  this. fetchPosts()\n  },\n  computed: {\n    return [...this.posts].sort((post1,post2) => {\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\n      })\n  }\n}\n</script>\n\n\n<style>\n* {\n  color: #616161;\n  background-color: #212121;\n  padding: 0;\n  box-sizing: border-box;\n}\n.app{\n  padding: 20px;\n}\n.app__btns {\n  margin: 15px 0;\n  display: flex;\n  justify-content: space-between; /* кнопка напротив выпадающего списка */\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}