{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-54c1ae8e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"list of users\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  key: 1,\n  style: {\n    \"color\": \"#\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_item = _resolveComponent(\"post-item\");\n\n  return $props.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.posts, post => {\n    return _openBlock(), _createBlock(_component_post_item, {\n      post: post,\n      key: post.id,\n      onRemove: $event => _ctx.$emit('remove', post)\n    }, null, 8\n    /* PROPS */\n    , [\"post\", \"onRemove\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : (_openBlock(), _createElementBlock(\"h3\", _hoisted_3, \" the list of users is empty \"));\n}","map":{"version":3,"mappings":";;;;;;;;gEAEQA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;;EAQOC,KAAgB,EAAhB;IAAA;EAAA;;;;;SATAC,aAAMC,MAAN,GAAY,mBAAvBC,oBAQM,KARN,EAQMC,UARN,EAQM,CAPFC,UAOE,qBANFF,oBAKEG,SALF,EAKE,IALF,EAKEC,YAJaN,YAIb,EAJKO,IAAa,IAAT;yBADXC,aAKEC,oBALF,EAKE;MAHDF,IAAI,EAAEA,IAGL;MAFDG,GAAG,EAAEH,IAAI,CAACI,EAET;MADDC,QAAM,YAAEC,WAAK,QAAL,EAAgBN,IAAhB;IACP,CALF;;IAAA;GAKE,CALF;;EAAA,CAME,EARN,oBASAL,oBAEK,IAFL,cAA4B,8BAA5B","names":["_createElementVNode","style","$props","length","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","post","_createBlock","_component_post_item","key","id","onRemove","_ctx"],"sourceRoot":"","sources":["C:\\Users\\Annni\\Desktop\\myPurpose\\training\\project1\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"posts.length > 0\">\r\n        <h3>list of users</h3>\r\n        <post-item \r\n        v-for=\"post in posts\" \r\n        :post=\"post\"\r\n        :key=\"post.id\"\r\n        @remove=\"$emit('remove', post)\"\r\n        />\r\n    </div>\r\n    <h3 v-else style=\"color: #\">\r\n        the list of users is empty\r\n    </h3>\r\n</template>\r\n\r\n\r\n<script>\r\nimport PostItem from \"@/components/PostItem.vue\";\r\nexport default {\r\n    // К слову, пропсы нельзя изменять(их надо менять в корне)\r\n    components: {\r\n        PostItem,\r\n    },\r\n    props: {\r\n        posts: {\r\n            type: Array,\r\n            required: true,\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.post {\r\n  color: #616161;\r\n  padding: 15px;\r\n  border: 2px solid black;\r\n  margin-top: 15px;\r\n  border-radius: 5px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}